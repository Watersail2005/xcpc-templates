<snippet>
	<content><![CDATA[
vector<int>a[10005],c[10005],d[10005],e[10005];
bool v[10005];
int l[10005],pr1[10005],pr2[10005],dis[10005],flow,ans;
int s,t;
void add(int u,int v,int l,int w)
{
    a[u].push_back(v);
    a[v].push_back(u);
    c[u].push_back(l);
    c[v].push_back(0);
    d[u].push_back(a[v].size()-1);
    d[v].push_back(a[u].size()-1);
    e[u].push_back(w);
    e[v].push_back(-w);
}
void update()
{
    int p=t;
    flow+=l[t];
    while(p!=s)
    {
        c[pr1[p]][pr2[p]]-=l[t];
        c[p][d[pr1[p]][pr2[p]]]+=l[t];
        ans=ans+e[pr1[p]][pr2[p]]*l[t];
        p=pr1[p];
    }
}
bool spfa()
{
	for(int i=s;i<=t;i++)
	{
		dis[i]=INT_MAX;
		v[i]=false;
	}
    queue<int>q;
    q.push(s);
    l[s]=INT_MAX;
    dis[s]=0;
    v[s]=true;
    while(q.size())
    {
        int n1=q.front();
        q.pop();
        v[n1]=false;
        for(int i=0;i<a[n1].size();i++)
        {
            if(c[n1][i]&&dis[n1]+e[n1][i]<dis[a[n1][i]])
            {
                l[a[n1][i]]=min(l[n1],c[n1][i]);
                dis[a[n1][i]]=dis[n1]+e[n1][i];
                pr1[a[n1][i]]=n1;
                pr2[a[n1][i]]=i;
                if(v[a[n1][i]]==false)
                {
                	v[a[n1][i]]=true;
                	q.push(a[n1][i]);
                }
            }
        }
    }
    return dis[t]!=INT_MAX;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>eks</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
